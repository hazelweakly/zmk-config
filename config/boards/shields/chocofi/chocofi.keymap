/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/**

Keymap ideas for later

https://zmk.dev/docs/features/combos
https://www.reddit.com/r/ErgoMechKeyboards/comments/r7y42o/keymap_tinkering/
https://github.com/callum-oakley/qmk_firmware/tree/master/users/callum#oneshot-modifiers
https://www.reddit.com/r/ErgoMechKeyboards/comments/r7y42o/keymap_tinkering/hn4fo5r/
https://github.com/kagoromo/zmk-config/blob/master/config/west.yml
https://zmk.dev/blog/2022/04/10/zmk-sotf-5
https://github.com/MrMarble/zmk-viewer

**/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define BASE 0
#define NAV 1
#define FUN 2
#define ADJ 3

#define COMBO(name, keypos, keypress) \
    combo_##name {                    \
        layers = <0>;                 \
        timeout-ms = <25>;            \
        bindings = <keypress>;        \
        key-positions = <keypos>;     \
        slow-release;                 \
    };

#define TAP_TERM_MS 125

&mt {
    tapping-term-ms = <TAP_TERM_MS>;
    quick-tap-ms = <200>;
};

&lt {
    tapping-term-ms = <TAP_TERM_MS>;
    quick-tap-ms = <200>;
};

&kscan0 {
  debounce-press-ms = <1>;
  debounce-release-ms = <5>;
};


/ {
        combos {
          compatible = "zmk,combos";
          COMBO(tab, 3 4, &kp TAB)
          COMBO(sqt, 7 8, &kp SQT)
          COMBO(colon, 16 17, &kp COLON)
          COMBO(sqt, 17 18, &kp SQT)
          COMBO(caps, 23 26, &caps_word)
          COMBO(semi, 26 27, &kp SEMI)

          COMBO(hrZ, 10 20, &kp LALT)
          COMBO(hrX, 11 21, &kp LGUI)
          COMBO(hrC, 12 22, &kp LCTRL)
          COMBO(hrV, 13 23, &kp LSHFT)
          COMBO(hrB, 14 24, &kp LALT)
          COMBO(hrN, 15 25, &kp LALT)
          COMBO(hrM, 16 26, &kp RSHFT)
          COMBO(hrK, 17 27, &kp RCTRL)
          COMBO(hrL, 18 28, &kp RGUI)
          COMBO(hrP, 19 29, &kp LALT)

       };


        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
   &kp Q       &kp W       &kp E          &kp R          &kp T             &kp Y        &kp U          &kp I            &kp O          &kp P
   &kp A       &kp S       &kp D          &kp F          &kp G             &kp H        &kp J          &kp K            &kp L          &kp SEMI
   &kp Z       &kp X       &kp C          &kp V          &kp B             &kp N        &kp M          &kp COMMA        &kp DOT        &kp FSLH
                           &mt LGUI ESC   &lt NAV BSPC   &kp LSHFT         &lt FUN RET  &kp SPACE &lt ADJ DEL
                        >;
                };

                nav_layer {
                        bindings = <
   &kp EXCL  &kp AT        &kp HASH       &kp DLLR       &kp PRCNT         &kp CARET    &kp AMPS      &kp STAR         &kp LPAR       &kp RPAR
   &kp LPAR  &kp RPAR      &kp LBKT       &kp RBKT       &kp GRAVE         &kp TILDE    &kp EQUAL     &kp UNDER        &kp LBKT       &kp RBKT
   &kp LBRC  &kp RBRC      &kp FSLH       &kp BSLH       &none             &kp PIPE     &kp PLUS      &kp MINUS        &kp LT         &kp GT
                           &none          &none          &kp BSPC          &lt FUN RET  &kp SPACE     &kp DEL
                        >;
                };

                fun_layer {
                        bindings = <
   &kp N1      &kp N2       &kp N3         &kp N4        &kp N5            &kp N6       &kp N7        &kp N8           &kp N9      &kp N0
   &kp F11     &kp C_VOL_DN &kp C_VOL_UP   &kp C_MUTE    &none             &kp LEFT     &kp DOWN      &kp UP           &kp RIGHT   &kp LALT
   &kp F10     &kp F1       &kp F2         &kp F3        &none             &none        &none         &none            &none       &none
                            &none          &none         &kp BSPC          &none        &kp SPACE     &none
                        >;
                };

                adj_layer {
                        bindings = <
   &none         &none         &none         &none        &none            &none        &none   &none   &none   &none
   &bt BT_CLR    &bt BT_PRV    &bt BT_NXT    &reset       &bootloader      &bootloader  &reset  &none   &none   &none
   &out OUT_TOG  &none         &none         &none        &none            &none        &none   &none   &none   &none
                               &none         &none        &none            &none        &none   &none
                        >;
                };
        };
};
